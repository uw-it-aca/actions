name: 'Google Cloud Registry Push'

description: 'Tag and push image to Registry'

inputs:
  image_tag:
    description: 'Image tag to push to Registry'
    required: true
  gcp_json_key:
    description: 'Authentication key for GCP access'
    required: true
  gcp_project_id:
    description: 'GCP project containing registry'
    required: false
    default: 'uwit-mci-axdd'
  registry_hostname:
    description: 'Registry hostname'
    required: false
    default: 'gcr.io'

outputs:
  reg_tag:
    description: 'Registry image tag'
    value: ${{ steps.reg-tag.outputs.reg_tag }}

runs:
  using: 'composite'

  steps:
    - name: Verify GCP credentials
      shell: bash
      run: |
        if [[ -z "${{ inputs.gcp_json_key }}" ]]; then
          echo "Missing GCP credentials"
          exit 1
        fi

    - name: Docker login with GCP credentials
      id: gcp-login
      shell: bash
      run: |
        echo "${{ inputs.gcp_json_key }}" |
          base64 -d |
          docker login --username=_json_key --password-stdin https://${{ inputs.registry_hostname }}

    - name: Tag Image for Registry
      id: reg-tag
      shell: bash
      run: |
        case ${{ inputs.registry_hostname }} in
          *docker.pkg.dev$)
            REG_PATH=containers/
            ;;
          *)
            REG_PATH=""
            ;;
        esac

        REG_TAG=${{ inputs.registry_hostname }}/${{ inputs.gcp_project_id }}/${REG_PATH}${{ inputs.image_tag }}
        docker tag "${{ inputs.image_tag }}" "$REG_TAG"
        echo "::set-output name=reg_tag::$REG_TAG"

    - name: Push Image to Registry
      id: reg-push
      shell: bash
      run: |
        docker push "${{ steps.reg-tag.outputs.reg_tag }}"
        echo "pushed ${{ steps.reg-tag.outputs.reg_tag }}"
