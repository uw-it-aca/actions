name: 'Google Cloud Platform Registry Push'

description: 'Tag and push image to GCR/GAR'

inputs:
  image_tag:
    description: 'Image tag to push to GCR/GAR'
    required: true
  gcp_json_key:
    description: 'Authentication key for GCP access'
    required: true
  gcp_project_id:
    description: 'GCP project containing registry'
    required: false
    default: 'uwit-mci-axdd'
  gcr_hostname:
    description: 'GCR hostname'
    required: false
    default: 'gcr.io'
  container_path
    description: 'Registry container path'
    required: false
    default: ''

outputs:
  gcr_tag:
    description: 'GCR image tag'
    value: ${{ steps.gcr-tag.outputs.gcr_tag }}

runs:
  using: 'composite'

  steps:
    - name: Verify GCP credentials
      shell: bash
      run: |
        if [[ -z "${{ inputs.gcp_json_key }}" ]]; then
          echo "Missing GCP credentials"
          exit 1
        fi

    - name: Docker login with GCP credentials
      id: gcp-login
      shell: bash
      run: |
        echo "${{ inputs.gcp_json_key }}" |
          base64 -d |
          docker login --username=_json_key --password-stdin https://${{ inputs.gcr_hostname }}

    - name: Tag Image for GCR
      id: gcr-tag
      shell: bash
      run: |
        GCR_TAG_PARTS=(${{ inputs.gcr_hostname }} ${{ inputs.gcp_project_id }})
        if [[ -n "${{ inputs.container_path }}" ]]; then
          GCR_TAG_PARTS+=(${{ inputs.container_path }})
        fi
        GCR_TAG_PARTS+=(${{ inputs.image_tag }})
        GCR_TAG=$(IFS=/; echo "${GCR_TAG_PARTS[*]}")
        docker tag "${{ inputs.image_tag }}" "GCR_TAG"
        echo "::set-output name=gcr_tag::$GCR_TAG"

    - name: Push Image to GCR
      id: gcr-push
      shell: bash
      run: |
        docker push "${{ steps.gcr-tag.outputs.gcr_tag }}"
        echo "pushed ${{ steps.gcr-tag.outputs.gcr_tag }}"
